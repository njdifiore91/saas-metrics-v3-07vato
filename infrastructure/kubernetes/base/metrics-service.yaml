---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-service
  labels:
    app: metrics-service
    component: backend
    tier: service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "50051"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: metrics-service
  template:
    metadata:
      labels:
        app: metrics-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "50051"
    spec:
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
      containers:
        - name: metrics-service
          image: metrics-service:latest
          imagePullPolicy: Always
          ports:
            - name: grpc
              containerPort: 50051
              protocol: TCP
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "50051"
            - name: NODE_OPTIONS
              value: "--max-old-space-size=2048"
            - name: UV_THREADPOOL_SIZE
              value: "4"
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          securityContext:
            runAsUser: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          livenessProbe:
            exec:
              command: ["node", "healthcheck.js"]
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command: ["node", "healthcheck.js"]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: node-modules
              mountPath: /app/node_modules
      volumes:
        - name: tmp
          emptyDir: {}
        - name: node-modules
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: metrics-service
                topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: metrics-service
  labels:
    app: metrics-service
    component: backend
    tier: service
spec:
  type: ClusterIP
  ports:
    - name: grpc
      port: 50051
      targetPort: 50051
      protocol: TCP
  selector:
    app: metrics-service
---
apiVersion: policy/v1
kind: NetworkPolicy
metadata:
  name: metrics-service-network-policy
spec:
  podSelector:
    matchLabels:
      app: metrics-service
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: api-gateway-service
      ports:
        - protocol: TCP
          port: 50051
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: metrics-db
      ports:
        - protocol: TCP
          port: 5432
    - to:
        - podSelector:
            matchLabels:
              app: redis-cache
      ports:
        - protocol: TCP
          port: 6379
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: metrics-service-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: metrics-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70