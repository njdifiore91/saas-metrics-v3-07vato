name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly scan on Sundays

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

jobs:
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript, python
          queries: security-extended,security-and-quality
          ram: 4096
          config-file: ./.github/codeql/codeql-config.yml

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript,typescript,python"
          upload: true
          output: sarif-results
          
      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: sarif-results
          category: security-extended

  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Backend Dependency Scan
        uses: snyk/actions/node@v0.5.0
        with:
          command: test
          args: --severity-threshold=high --all-projects --json-file-output=backend-vulns.json
          file: ./src/backend/package.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Frontend Dependency Scan
        uses: snyk/actions/node@v0.5.0
        with:
          command: test
          args: --severity-threshold=high --all-projects --json-file-output=frontend-vulns.json
          file: ./src/web/package.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload Scan Results
        uses: actions/upload-artifact@v3
        with:
          name: vulnerability-reports
          path: |
            backend-vulns.json
            frontend-vulns.json
          retention-days: 90
          if-no-files-found: error

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.14.1
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          timeout: '15m'
          exit-code: '1'
          ignore-unfixed: true
        env:
          TRIVY_NO_PROGRESS: true
          TRIVY_CACHE_DIR: /tmp/.cache

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'trivy'

      - name: Generate security report
        if: always()
        run: |
          echo "Security Scan Summary" > security-report.md
          echo "===================" >> security-report.md
          echo "Timestamp: $(date)" >> security-report.md
          echo "Branch: ${{ github.ref }}" >> security-report.md
          echo "Commit: ${{ github.sha }}" >> security-report.md
          if [ -f trivy-results.sarif ]; then
            echo "Container vulnerabilities found. Check SARIF report for details." >> security-report.md
          fi

      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.md
          retention-days: 90

  security-gates:
    name: Security Quality Gates
    needs: [codeql-analysis, dependency-check, container-scan]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Check workflow status
        if: contains(needs.*.result, 'failure')
        run: |
          echo "Security scan failed. Please check the scan results."
          exit 1